async function g(n){return new Promise(t=>{chrome.storage.sync.get(n,u=>{t(u)})})}async function m(n){return new Promise(t=>{chrome.storage.sync.set(n,()=>{t()})})}const e=[];for(let n=0;n<256;++n)e.push((n+256).toString(16).slice(1));function r(n,t=0){return(e[n[t+0]]+e[n[t+1]]+e[n[t+2]]+e[n[t+3]]+"-"+e[n[t+4]]+e[n[t+5]]+"-"+e[n[t+6]]+e[n[t+7]]+"-"+e[n[t+8]]+e[n[t+9]]+"-"+e[n[t+10]]+e[n[t+11]]+e[n[t+12]]+e[n[t+13]]+e[n[t+14]]+e[n[t+15]]).toLowerCase()}let c;const i=new Uint8Array(16);function a(){if(!c){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");c=crypto.getRandomValues.bind(crypto)}return c(i)}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),d={randomUUID:y};function s(n,t,u){if(d.randomUUID&&!t&&!n)return d.randomUUID();n=n||{};const o=n.random||(n.rng||a)();return o[6]=o[6]&15|64,o[8]=o[8]&63|128,r(o)}export{g,m as s,s as v};

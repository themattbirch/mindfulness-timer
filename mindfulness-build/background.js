import{s as k,g as o}from"./storage.js";let r=null,p=Date.now();const d=new Set,c={isActive:!1,isPaused:!1,timeLeft:15*60,mode:"custom",interval:15,isBlinking:!1,startTime:null,endTime:null},v={interval:15,soundEnabled:!0,theme:"light",soundVolume:50,autoStartTimer:!1,showQuotes:!0,quoteChangeInterval:60,selectedSound:"gentle-bell",timerMode:"focus",quoteCategory:"all",minimalMode:!1};chrome.runtime.onInstalled.addListener(async()=>{await k({...v,timerState:c}),console.log("[Background] Extension installed and default settings set.")});chrome.action.onClicked.addListener(()=>{chrome.windows.create({url:"index.html",type:"popup",width:400,height:600,focused:!0})});chrome.tabs.onRemoved.addListener(e=>{d.delete(e)});chrome.tabs.onUpdated.addListener(async(e,a,t)=>{if(a.status==="complete"&&t.url){const{timerState:i}=await o(["timerState"]);if(i!=null&&i.isActive)try{await f(!1,[e])}catch(n){console.error(`Failed to handle tab update for ${e}:`,n)}}});chrome.tabs.onActivated.addListener(async()=>{A();const{timerState:e}=await o(["timerState"]);if(e!=null&&e.isActive)try{await f(!0)}catch(a){console.error("[Background] Failed to handle tab activation:",a)}});setInterval(async()=>{const a=Date.now()-p,t=5*6e4,{timerState:i}=await o(["timerState"]);a>t&&(!(i!=null&&i.isActive)||i.isPaused)&&(await h(),console.log("[Background] Auto-reset after idle"))},3e4);function A(){p=Date.now()}function q(e){return!!e&&!!e.id&&/^https?:\/\//.test(e.url||"")}async function f(e=!0,a){const{timerState:t}=await o(["timerState"]);let i=[];if(a&&a.length>0?i=(await Promise.all(a.map(s=>chrome.tabs.get(s).catch(()=>null)))).filter(q):i=(await chrome.tabs.query({})).filter(s=>!!s.id&&/^https?:\/\//.test(s.url||"")),i.length===0){console.log("[Background] No valid tabs found for injection.");return}for(const n of i)if(n.id&&!(e&&d.has(n.id)))try{await chrome.scripting.executeScript({target:{tabId:n.id},files:["content-script.js"]}),d.add(n.id),t!=null&&t.isActive?await chrome.tabs.sendMessage(n.id,{action:t.isPaused?"timerPaused":"timerStarted",timerState:t}):await chrome.tabs.sendMessage(n.id,{action:"timerReset",timerState:c})}catch(s){console.error(`Failed to inject overlay on tab ${n.id}:`,s)}}async function B(e){try{await chrome.tabs.sendMessage(e,{action:"removeOverlay"}),d.delete(e)}catch(a){console.error(`[Background] Could not remove overlay from tab ${e}`,a)}}async function u(e){const a=await chrome.tabs.query({});for(const t of a)if(t.id)try{await chrome.tabs.sendMessage(t.id,e)}catch{}}chrome.runtime.onMessage.addListener((e,a,t)=>((async()=>{var s;A();const{timerState:i}=await o(["timerState"]),n=i||c;switch(e.action){case"killTimer":await D(),t({status:"Timer killed!"});break;case"globalRestart":await E(),t({status:"Timer restarted globally"});break;case"startTimer":await M(e.interval,e.mode),t({status:"Timer started"});break;case"resumeTimer":await I(n),t({status:"Timer resumed"});break;case"pauseTimer":{const T=await C(n);await u({action:"timerPaused",timerState:T}),t({status:"Timer paused"});break}case"resetTimer":await h(),await u({action:"timerReset",timerState:c}),t({status:"Timer reset"});break;case"snoozeTimer":await F(),t({status:"Timer snoozed"});break;case"closeOverlay":((s=a.tab)==null?void 0:s.id)!=null&&await B(a.tab.id),t({status:"Overlay closed globally"});break;default:console.warn("[Background] Unknown action:",e.action),t({status:"Unknown action"});break}})(),!0));async function D(){await h();const e=await chrome.tabs.query({});for(const a of e)if(a.id)try{await chrome.tabs.sendMessage(a.id,{action:"removeOverlay"})}catch{}d.clear()}async function M(e,a){const t=Date.now(),i=t+e*6e4,n={isActive:!0,isPaused:!1,timeLeft:e*60,mode:a,interval:e,isBlinking:!1,startTime:t,endTime:i};await w(n),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:i}),y(),await f(!1),await u({action:"timerStarted",timerState:n})}function y(){r&&clearInterval(r),r=setInterval(async()=>{const{timerState:e}=await o(["timerState"]);if(!e||!e.isActive||e.isPaused||!e.endTime){clearInterval(r),r=null;return}const a=Date.now(),t=e.endTime-a;let i=Math.floor(t/1e3);if(i<0&&(i=0),i<=0){clearInterval(r),r=null;return}const n={...e,timeLeft:i};await w(n)},1e3)}async function I(e){if(e.isActive&&e.isPaused&&e.timeLeft>0){const a=Date.now(),t=a+e.timeLeft*1e3,i={...e,isPaused:!1,startTime:a,endTime:t};await w(i),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:t}),y(),await f(!1),await u({action:"timerResumed",timerState:i})}}async function C(e){if(e.isActive&&!e.isPaused&&e.endTime){const a=Date.now(),t=Math.max(0,e.endTime-a),i=Math.floor(t/1e3);chrome.alarms.clear("mindfulnessTimer"),r&&(clearInterval(r),r=null);const n={...e,isPaused:!0,timeLeft:i,endTime:null};return await w(n),n}return e}async function E(){await h();const e=await o(["interval","timerMode"]),a=e.interval??v.interval,t=e.timerMode??v.timerMode;await M(a,t),await f(!1)}async function F(){const e=Date.now(),a=e+5*6e4,t={...c,isActive:!0,timeLeft:5*60,mode:"shortBreak",interval:5,startTime:e,endTime:a};await w(t),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:a}),y(),await f(!1),await u({action:"timerStarted",timerState:t})}async function h(){r&&(clearInterval(r),r=null),await w(c),chrome.alarms.clear("mindfulnessTimer"),d.clear()}async function w(e){await k({timerState:e}),await u({action:"timerUpdated",timerState:e})}chrome.alarms.onAlarm.addListener(async e=>{if(e.name==="mindfulnessTimer"){const{soundEnabled:a,selectedSound:t,timerState:i,showQuotes:n}=await o(["soundEnabled","selectedSound","timerState","showQuotes"]),s=i||c;if(s.isActive&&!s.isPaused){await h();let T=null;n&&(T=O());let g=null;a&&t&&(g=chrome.runtime.getURL(`sounds/${t}.mp3`));const L=await chrome.windows.getAll({populate:!0}),S=[];L.forEach(l=>{var b;(b=l.tabs)==null||b.forEach(m=>{m.active&&S.push(m)})});const P=await chrome.tabs.query({});for(const l of P){if(!l.id)continue;const b=S.some(m=>m.id===l.id);try{await chrome.tabs.sendMessage(l.id,{action:"timerCompleted",quote:T,soundUrl:g,isActive:b})}catch(m){console.error(`Failed to send timerCompleted to tab ${l.id}:`,m)}}}}});function O(){const e=["Be mindful in the moment.","Focus on what matters now.","Take a breath and refocus.","Small steps lead to big results."];return e[Math.floor(Math.random()*e.length)]}

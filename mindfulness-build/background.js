import{s as n,g as c}from"./storage.js";let v=Date.now(),y=new Set;const f={isActive:!1,isPaused:!1,timeLeft:15*60,mode:"custom",interval:15,isBlinking:!1,startTime:null,endTime:null},S={interval:15,soundEnabled:!0,theme:"light",soundVolume:50,autoStartTimer:!1,showQuotes:!0,quoteChangeInterval:60,selectedSound:"gentle-bell",timerMode:"focus",quoteCategory:"all",minimalMode:!1};chrome.runtime.onInstalled.addListener(async()=>{await n({interval:15,soundEnabled:!0,theme:"light",soundVolume:50,autoStartTimer:!1,showQuotes:!0,quoteChangeInterval:60,selectedSound:"gentle-bell",timerMode:"custom",quoteCategory:"all",minimalMode:!1,extensionClosed:!1,timerState:f}),console.log("[Background] Extension installed and default settings set.")});chrome.tabs.onRemoved.addListener(e=>{y.delete(e)});chrome.tabs.onUpdated.addListener(async(e,i,t)=>{if(i.status==="complete"&&t.url){const{extensionClosed:a,timerState:r}=await c(["extensionClosed","timerState"]);if(!a||r!=null&&r.isActive)try{await s()}catch(o){console.error(`Failed to handle tab update for ${e}:`,o)}}});chrome.tabs.onActivated.addListener(async e=>{k();const{extensionClosed:i,timerState:t}=await c(["extensionClosed","timerState"]);if(!i||t!=null&&t.isActive)try{await s()}catch(a){console.error("Failed to handle tab activation:",a)}});setInterval(async()=>{const i=Date.now()-v,t=5*6e4,{extensionClosed:a,timerState:r}=await c(["extensionClosed","timerState"]);!a&&i>t&&(!(r!=null&&r.isActive)||r.isPaused)&&(await w(),console.log("[Background] Auto-reset after idle"))},3e4);function k(){v=Date.now()}async function s(){var t;const e=await chrome.tabs.query({}),i=await c(["timerState"]);for(const a of e)if(!(!a.id||!/^https?:\/\//.test(a.url||"")))try{await chrome.scripting.executeScript({target:{tabId:a.id},files:["content-script.js"]}),y.add(a.id),(t=i.timerState)!=null&&t.isActive&&await chrome.tabs.sendMessage(a.id,{action:i.timerState.isPaused?"timerPaused":"timerStarted",timerState:i.timerState})}catch(r){console.error(`Failed to handle tab ${a.id}:`,r)}}chrome.runtime.onMessage.addListener((e,i,t)=>((async()=>{k();const a=await c(["extensionClosed","timerState"]);let r=a.extensionClosed??!1;const o=a.timerState||f;switch(e.action){case"globalRestart":try{await x(),await s(),t({status:"Timer restarted globally"})}catch(l){const b=l instanceof Error?l.message:"Unknown error occurred";console.error("[Background] globalRestart failed:",l),t({status:"error",error:b})}break;case"startTimer":case"resumeTimer":r&&(await n({extensionClosed:!1}),r=!1,await s()),e.action==="startTimer"?(await A(e.interval,e.mode),t({status:"Timer started"})):(await p(o),t({status:"Timer resumed"}));break;case"pauseTimer":const h=await C(o);await u({action:"timerPaused",timerState:h}),t({status:"Timer paused"});break;case"resetTimer":await w(),await u({action:"timerReset",timerState:f}),await s(),t({status:"Timer reset"});break;case"snoozeTimer":await E(),await s(),t({status:"Timer snoozed"});break;case"closeOverlay":await w(),await n({extensionClosed:!0}),await u({action:"removeOverlay"}),t({status:"Overlay closed globally"});break;default:console.warn("[Background] Unknown action:",e.action),t({status:"Unknown action"});break}})(),!0));async function u(e){const i=await chrome.tabs.query({});for(const t of i)if(t.id)try{await chrome.tabs.sendMessage(t.id,e)}catch(a){console.error(`Failed to notify tab ${t.id}:`,a)}}async function A(e,i){const t=Date.now(),a=t+e*60*1e3,r={isActive:!0,isPaused:!1,timeLeft:e*60,mode:i,interval:e,isBlinking:!1,startTime:t,endTime:a};await n({timerState:r}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:a}),await s(),await u({action:"timerStarted",timerState:r})}async function C(e){if(e.isActive&&!e.isPaused&&e.endTime){const i=Date.now(),t=Math.max(0,e.endTime-i),a=Math.floor(t/1e3);chrome.alarms.clear("mindfulnessTimer");const r={...e,isPaused:!0,timeLeft:a,endTime:null};return await n({timerState:r}),r}return e}async function p(e){if(e.isActive&&e.isPaused&&e.timeLeft>0){const i=Date.now(),t=i+e.timeLeft*1e3,a={...e,isPaused:!1,startTime:i,endTime:t};await n({timerState:a}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:t}),await s(),await u({action:"timerResumed",timerState:a})}}async function w(){await n({timerState:f}),chrome.alarms.clear("mindfulnessTimer"),await s()}async function x(){await w();const e=await c(["interval","timerMode"]),i=e.interval??S.interval,t=e.timerMode??S.timerMode;await A(i,t),await s()}async function E(){const e=Date.now(),i=e+5*6e4,t={...f,isActive:!0,timeLeft:5*60,mode:"shortBreak",interval:5,startTime:e,endTime:i};await n({timerState:t}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:i}),await s(),await u({action:"timerStarted",timerState:t})}chrome.alarms.onAlarm.addListener(async e=>{if(e.name==="mindfulnessTimer"){const{soundEnabled:i,selectedSound:t,timerState:a,showQuotes:r}=await c(["soundEnabled","selectedSound","timerState","showQuotes"]),o=a||f;if(o.isActive&&!o.isPaused){await w();let h=null;r&&(h=L());let l=null;i&&t&&(l=chrome.runtime.getURL(`sounds/${t}.mp3`));const b=await chrome.windows.getAll({populate:!0}),g=[];b.forEach(m=>{var T;(T=m.tabs)==null||T.forEach(d=>{d.active&&g.push(d)})});const M=await chrome.tabs.query({});for(const m of M){if(!m.id)continue;const T=g.some(d=>d.id===m.id);try{await P(m.id,{action:"timerCompleted",quote:h,soundUrl:l,isActive:T})}catch(d){console.error(`Failed to send timerCompleted to tab ${m.id}:`,d)}}}}});function L(){const e=["Be mindful in the moment.","Focus on what matters now.","Take a breath and refocus.","Small steps lead to big results."];return e[Math.floor(Math.random()*e.length)]}function P(e,i){return new Promise((t,a)=>{chrome.tabs.sendMessage(e,i,r=>{chrome.runtime.lastError?(console.error(`Error sending message to tab ${e}:`,chrome.runtime.lastError),a(chrome.runtime.lastError)):t()})})}

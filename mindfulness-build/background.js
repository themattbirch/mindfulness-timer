import{s,g as m}from"./storage.js";const n={isActive:!1,isPaused:!1,timeLeft:15*60,mode:"custom",interval:15,isBlinking:!1,startTime:null,endTime:null};chrome.runtime.onInstalled.addListener(()=>{s({interval:15,soundEnabled:!0,theme:"light",soundVolume:50,autoStartTimer:!1,showQuotes:!0,quoteChangeInterval:60,selectedSound:"gentle-bell",timerMode:"custom",quoteCategory:"all",minimalMode:!1,timerState:n})});chrome.tabs.onUpdated.addListener((e,a,t)=>{a.status==="complete"&&t.url&&chrome.scripting.executeScript({target:{tabId:e},files:["content-script.js"]})});chrome.tabs.onActivated.addListener(e=>{const a=e.tabId;chrome.tabs.get(a,t=>{t&&t.url&&/^https?:\/\//.test(t.url)&&chrome.scripting.executeScript({target:{tabId:a},files:["content-script.js"]})})});chrome.runtime.onMessage.addListener(async(e,a,t)=>{const r=(await m(["timerState"])).timerState||n;switch(e.action){case"startTimer":await o(e.interval,e.mode),t({status:"Timer started"});break;case"pauseTimer":await c(r),t({status:"Timer paused"});break;case"resumeTimer":await l(r),t({status:"Timer resumed"});break;case"resetTimer":await u(),t({status:"Timer reset"});break;case"snoozeTimer":await d(),t({status:"Timer snoozed for 5 minutes"});break;default:t({status:"Unknown action"})}return!0});async function o(e,a){const t=Date.now(),i=t+e*60*1e3,r={isActive:!0,isPaused:!1,timeLeft:e*60,mode:a,interval:e,isBlinking:!1,startTime:t,endTime:i};await s({timerState:r}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:i})}async function c(e){if(e.isActive&&!e.isPaused){const a=Date.now();if(e.endTime){const t=Math.max(0,e.endTime-a),i=Math.floor(t/1e3);await chrome.alarms.clear("mindfulnessTimer");const r={...e,isPaused:!0,timeLeft:i,endTime:null};await s({timerState:r})}}}async function l(e){if(e.isActive&&e.isPaused&&e.timeLeft>0){const a=Date.now(),t=a+e.timeLeft*1e3,i={...e,isPaused:!1,endTime:t,startTime:a};await s({timerState:i}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:t})}}async function u(){await s({timerState:n}),chrome.alarms.clear("mindfulnessTimer")}async function d(){const e=Date.now(),a=e+5*60*1e3,t={...n,isActive:!0,timeLeft:5*60,mode:"shortBreak",interval:5,startTime:e,endTime:a};await s({timerState:t}),chrome.alarms.clear("mindfulnessTimer"),chrome.alarms.create("mindfulnessTimer",{when:a})}chrome.alarms.onAlarm.addListener(async e=>{if(e.name==="mindfulnessTimer"){const t=(await m(["soundEnabled","timerState"])).timerState||n;t.isActive&&!t.isPaused&&(await s({timerState:n}),chrome.runtime.sendMessage({action:"timerCompleted"}))}});
